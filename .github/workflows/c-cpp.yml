name: Build

on:
  push:
    branches: [master]

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: ilammy/setup-nasm@v1.2.1
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Update binaries
        run: |
          $ErrorActionPreference = 'SilentlyContinue'
          nmake
          xcopy /Y /I dist\*.node binaries\

      - name: Upload prebuild-assets
        uses: actions/upload-artifact@v2
        with:
          name: windows-binaries
          path: binaries
          retention-days: 1

  build-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12, ubuntu-20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
      - name: Update binaries
        run: |
          sudo xcode-select -switch /Applications/Xcode_12.2.app || true
          sudo apt update || true
          sudo apt install -y g++-aarch64-linux-gnu || true
          make
          rm -rf binaries
          mkdir binaries
          ls dist
          cp dist/*.node binaries
      - name: Upload prebuild-assets
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-binaries
          path: binaries
          retention-days: 1

  build-arm:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: aarch64
            os: ubuntu20.04
          - arch: armv7
            os: bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
      - uses: uraimo/run-on-arch-action@v2.3.0
        name: Compile binaries
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.os }}
          dockerRunArgs: |
            --volume "${PWD}:/repository"
          install: |
            apt-get update -q -y
            apt-get install -q -y build-essential cmake libz-dev golang curl libunwind-dev clang
          run: |
            cd /repository
            make
            rm -rf binaries
            mkdir binaries
            ls dist
            cp dist/*.node binaries
      - name: Upload prebuild-assets
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arch }}-binaries
          path: binaries
          retention-days: 1

  aggregate_binaries:
    needs: [build-windows, build-unix, build-arm]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: download windows binaries
        uses: actions/download-artifact@v4.1.7
        with:
          name: windows-binaries
          path: binaries

      - name: download macos-12 binaries
        uses: actions/download-artifact@v4.1.7
        with:
          name: macos-12-binaries
          path: binaries

      - name: download ubuntu-20.04 binaries
        uses: actions/download-artifact@v4.1.7
        with:
          name: ubuntu-20.04-binaries
          path: binaries

      - name: download aarch64 binaries
        uses: actions/download-artifact@v4.1.7
        with:
          name: aarch64-binaries
          path: binaries

      - name: download armv7 binaries
        uses: actions/download-artifact@v4.1.7
        with:
          name: armv7-binaries
          path: binaries

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: binaries

      - name: configure Git
        run: |
          git config --global user.email "robot@trufflesuite.com"
          git config --global user.name "Robot"

      - run: git add binaries
      - run: git commit -a -m "[GitHub Actions] Update binaries"
      - run: git push "https://robot:${{ secrets.SECRET }}@github.com/trufflesuite/uws-js-unofficial" ${GITHUB_REF##*/}
